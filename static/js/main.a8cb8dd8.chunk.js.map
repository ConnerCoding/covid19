{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","separator","duration","end","value","Date","toDateString","url","fetchData","country","a","dynamicURL","axios","get","fetchDailyData","dailyData","map","dataPoint","total","date","reportDate","countriesAPI","countries","console","log","Chart","useState","setDailyData","useEffect","getDailyData","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","setCountries","getCountries","FormControl","formControl","NativeSelect","onChange","e","target","i","key","name","App","state","fetchedData","setState","this","image","src","headerImage","alt","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a8cb8dd8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2J9Yy\",\"card\":\"Cards_card__YidoA\",\"infected\":\"Cards_infected__2g-xE\",\"recovered\":\"Cards_recovered__eh1cS\",\"deaths\":\"Cards_deaths__394eB\"};","import React from 'react';\r\nimport {Grid, CardContent, Card, Typography, StylesProvider} from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({ data: {confirmed, recovered, deaths, lastUpdate }}) => {\r\n    if (!confirmed) {\r\n        return 'Loading...';\r\n    }\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify='center'>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom>Infected</Typography>\r\n                        <Typography variant='h5'>\r\n                            <CountUp start={0} separator=',' duration={3.5} end={confirmed.value} />\r\n                        </Typography>\r\n                        <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant='body2'>Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom>Recovered</Typography>\r\n                        <Typography variant='h5'>\r\n                            <CountUp start={0} separator=',' duration={2.5} end={recovered.value} />\r\n                        </Typography>\r\n                        <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant='body2'>Number of recoveries from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom>Deaths</Typography>\r\n                        <Typography variant='h5'>\r\n                            <CountUp start={0} separator=',' duration={1.5} end={deaths.value} />\r\n                        </Typography>\r\n                        <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant='body2'>Number of deaths caused by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\nexport const fetchData = async (country) => {\r\n    let dynamicURL = url;\r\n    if (country) {\r\n        dynamicURL = `${url}/countries/${country}`;\r\n    }\r\n    \r\n    try {\r\n        const {data: {confirmed, deaths, recovered, lastUpdate}} = await axios.get(dynamicURL);\r\n        return {confirmed, deaths, recovered, lastUpdate};\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n        const dailyData = data.map((dataPoint) => {\r\n            return {\r\n                confirmed: dataPoint.confirmed.total,\r\n                deaths: dataPoint.deaths.total,\r\n                date: dataPoint.reportDate\r\n            }\r\n        });\r\n        return dailyData;\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\nexport const countriesAPI = async () => {\r\n    try {\r\n        const { data: {countries} } = await axios.get(`${url}/countries`);\r\n        return countries;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n    \r\n}","import React, {useState, useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: {confirmed, recovered, deaths}, country }) => {\r\n    const [dailyData, setDailyData] = useState({});\r\n\r\n    useEffect(() => {\r\n        const getDailyData = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        getDailyData();\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData.length ?\r\n        (<Line \r\n            data={{\r\n                labels: dailyData.map(({ date }) => date),\r\n                datasets: [{\r\n                    data: dailyData.map(({ confirmed }) => confirmed),\r\n                    label: 'Infected',\r\n                    borderColor: '#3333ff',\r\n                    fill: true\r\n                }, {\r\n                    data: dailyData.map(({ deaths }) => deaths),\r\n                    label: 'Deaths',\r\n                    borderColor: 'red',\r\n                    backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                    fill: true\r\n                }]\r\n            }}\r\n        />) : null\r\n    )\r\n\r\n    const barChart = (\r\n                confirmed ? (\r\n                    <Bar \r\n                        data={{\r\n                            labels: ['Infected', 'Recovered', 'Deaths'],\r\n                            datasets: [{\r\n                                label: 'People',\r\n                                backgroundColor: [\r\n                                    'rgba(0, 0, 255, 0.5)',\r\n                                    'rgba(0, 255, 0, 0.5)',\r\n                                    'rgba(255, 0, 0, 0.5)',\r\n                                ],\r\n                                data: [confirmed.value, recovered.value, deaths.value]\r\n                            }]\r\n                        }}\r\n                        options={{\r\n                            legend: { display: false },\r\n                            title: { display: true, text: `Current state in ${country}`}\r\n                        }}\r\n                    />\r\n                ) : null\r\n    );\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n            {(country || country === 'Global') ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React, { useEffect, useState } from 'react';\r\nimport {countriesAPI} from '../../api';\r\nimport {FormControl, NativeSelect} from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n    const [countries, setCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getCountries = async () => {\r\n            setCountries(await countriesAPI());\r\n        };\r\n        getCountries();\r\n    }, [setCountries]);\r\n\r\n    return(\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {countries.map((country, i) => {\r\n                    return <option key={i} value={country.name}>{country.name}</option>\r\n                })}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React, {Component} from 'react';\r\nimport Cards from './components/Cards/Cards';\r\nimport Chart from './components/Chart/Chart';\r\nimport CountryPicker from './components/CountryPicker/CountryPicker';\r\nimport styles from './App.module.css';\r\nimport {fetchData} from './api';\r\nimport headerImage from './images/image.png';\r\n\r\nclass App extends Component {\r\n\r\n    state = {\r\n        data: {},\r\n        country: ''\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n        this.setState({data: fetchedData});\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        const fetchedData = await fetchData(country);\r\n        this.setState({data: fetchedData, country: country});\r\n    }\r\n\r\n    render() {\r\n        const {data, country} = this.state;\r\n        return(\r\n            <div className={styles.container}>\r\n                <img className={styles.image} src={headerImage} alt=\"COVID-19\"/>\r\n                <Cards data={data}/>\r\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n                <Chart data={data} country={country} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2Q2Nm\",\"image\":\"App_image__1Zxl9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__yfDHB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2IBwB\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}